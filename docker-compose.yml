---
version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.0
    hostname: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_LOG4J_LOGGERS: "org.apache.zookeeper=WARN"
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: WARN

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.1.0
    hostname: kafka
    ports:
      - '9092:9092'
      - '39092:39092'
    depends_on:
    - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_LOG4J_LOGGERS: "kafka.controller=WARN,state.change.logger=INFO,kafka.coordinator.group=WARN,kafka.cluster=WARN,kafka.log=WARN,kafka.server=WARN,kafka.zookeeper=WARN,kafka.network=WARN,kafka.zk=WARN,kafka.coordinator=WARN,kafka.common=WARN,kafka.utils=WARN,org.apache.zookeeper=WARN"
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
      KAFKA_TOOLS_LOG4J_LOGLEVEL: ERROR

  # This "container" is a workaround to pre-create topics
  kafka-setup:
    image: confluentinc/cp-kafka:5.1.0
    hostname: kafka-setup
    container_name: kafka-setup
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b kafka:9092 1 40 && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 10 --replication-factor 1 --topic opensky_data && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 10 --replication-factor 1 --topic weather_data && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 10 --replication-factor 1 --topic test_topic_out'"
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored

  opensky-provider:
    image: ${REGISTRY_URI}/ucu-class/opensky-provider:${STUDENT_NAME}-0.1
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERS: kafka:9092
      ZK_CONNECT: zookeeper:2181

  weather-provider:
    image: ${REGISTRY_URI}/ucu-class/weather-provider:${STUDENT_NAME}-0.1
    depends_on:
      - kafka
    environment:
      PYTHONUNBUFFERED: 1
      KAFKA_BROKERS: kafka:9092
      ZK_CONNECT: zookeeper:2181

  streaming-app:
    image: ${REGISTRY_URI}/ucu-class/streaming-app:${STUDENT_NAME}-0.1
    depends_on:
      - kafka
      - opensky-provider
      - weather-provider
    environment:
      KAFKA_BROKERS: kafka:9092

  plotter:
    image: ${REGISTRY_URI}/ucu-class/plotter:${STUDENT_NAME}-0.1
    depends_on:
      - kafka
      - streaming-app
    environment:
      PYTHONUNBUFFERED: 1
      KAFKA_BROKERS: kafka:9092
      ZK_CONNECT: zookeeper:2181